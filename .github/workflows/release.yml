name: ùåö Release

on:
  workflow_dispatch:
    inputs:
      force-publish:
        required: true
        type: boolean
        description: Publish Releases at Anytime

  workflow_run:
    workflows: [ üß™ Tests and Checks ]
    branches: [main]
    types: [ completed ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'zeeshanlakhani'

    outputs:
      releases_created: ${{ steps.release.outputs['wnfs--release-created'] || steps.release.outputs['wnfs-wasm--release-created'] || steps.release.outputs['wnfs-bench--release-created'] }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          default-branch: main
          command: manifest
          extra-files: |
            Cargo.toml

  publish-release-crates:
    if: ${{ needs.release-please.outputs.releases_created || github.event.inputs.force-publish }}

    runs-on: ubuntu-latest
    needs: [ release-please ]

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: stable

      - name: Verify Publishing of crate
        uses: katyo/publish-crates@v1
        with:
          dry-run: true

      - name: Cargo Publish to crates.io
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  publish-release-npm:
    if: ${{ needs.release.outputs.releases_created || github.event.inputs.force-publish }}

    runs-on: ubuntu-latest
    needs: [ release-please ]

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: stable

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # Builds output via wasm-pack and renames package.json name
      - name: Build
        run: ./scripts/rs-wnfs.sh build --wasm
        shell: bash

      - name: Publish to npm
        run: wasm-pack publish
        working-directory: wnfs-wasm/pkg
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
